{"version":3,"sources":["component/Prompt.js","component/Viewer.js","component/Icons.js","component/AntSwitch.js","App.js","serviceWorker.js","index.js","image/test2.png"],"names":["Prompt","props","state","value","onChange","e","_onChange","prevProps","prevState","this","target","setState","type","placeholder","className","React","Component","ImageDemo","panImage","createRef","ref","width","height","image","myImage2","pitch","yaw","hfov","autoLoad","onLoad","console","log","Hotspot","text","URL","onClick","current","getViewer","getHfov","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","icon","margin","spacing","iconHover","cursor","color","red","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","fab","centerModal","top","left","transform","Icons","x","y","classes","useState","modalStyle","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","style","img","id","Icon","AntSwitch","withStyles","switchBase","grey","common","white","opacity","primary","main","borderColor","thumb","track","borderRadius","checked","Switch","App","displayPoints","points","map","point","showOnePoint","ID","Lat","Lon","Img","setPosition","bind","insertMarker","addNewPoint","handleModeChange","isEditMode","message","fetch","then","r","json","data","getData","key","pointStyle","parent","nativeEvent","offsetX","offsetY","markerStyle","feedback","Popup","registerPlugin","defaultValue","callback","promptValue","create","title","content","buttons","right","action","formData","FormData","append","method","body","res","Message","close","catch","plugins","prompt","alert","alt","src","Typography","component","Grid","container","item","Fab","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9c4312fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './../css/popup.css';\r\n\r\n/** The prompt content component */\r\nclass Prompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n        this.onChange = (e) => this._onChange(e);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.value !== this.state.value) {\r\n            this.props.onChange(this.state.value);\r\n        }\r\n    }\r\n\r\n    _onChange(e) {\r\n        let value = e.target.value;\r\n\r\n        this.setState({value: value});\r\n    }\r\n\r\n    render() {\r\n        return <input type=\"text\" placeholder={this.props.placeholder} className=\"mm-popup__input\" value={this.state.value} onChange={this.onChange} />;\r\n    }\r\n}\r\nexport default Prompt;","import React from 'react';\r\nimport { Pannellum } from \"pannellum-react\";\r\n// import myImage1 from \"../image/test1.png\";\r\n import myImage2 from \"../image/test2.png\";\r\n\r\n\r\nexport default class ImageDemo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.panImage = React.createRef()\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>360 Photo Viewer</h1>\r\n        <Pannellum\r\n          ref={this.panImage}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          image={myImage2}\r\n          pitch={10}\r\n          yaw={180}\r\n          hfov={10}\r\n          autoLoad\r\n          onLoad={() => {\r\n            console.log(\"panorama loaded\");\r\n          }}\r\n        >\r\n          <Pannellum.Hotspot\r\n            type=\"info\"\r\n            pitch={11}\r\n            yaw={-167}\r\n            text=\"Info Hotspot Text 3\"\r\n            URL=\"https://github.com/ED1Yang/Vault\"\r\n          />\r\n        </Pannellum>\r\n        <button onClick={() => console.log(this.panImage.current.getViewer().getHfov())}>get pitch</button>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Icon } from '@material-ui/core';\r\nimport Viewer from './Viewer'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'flex-end',\r\n    },\r\n    icon: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    iconHover: {\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        color: red[800],\r\n      },\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 4),\r\n      //customized:\r\n      color: 'green',\r\n      'text-align': 'center',\r\n    },\r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  function centerModal() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  export default function Icons(props) {\r\n    let x = props.value.x;\r\n    let y = props.value.y;\r\n    const img = () => {\r\n      if (props.value.img === '') {\r\n        return <p style={{ color: 'red' }}>No image yet</p>\r\n      }\r\n      else {\r\n        return <Viewer/>\r\n      }\r\n    }\r\n  \r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(centerModal);\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <Modal className='modals'\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <div style={modalStyle} className={classes.paper}>\r\n            {img()}\r\n            <h2 id=\"simple-modal-title\">Current point position:</h2>\r\n            <p id=\"simple-modal-description\">\r\n              x: {x} y: {y}\r\n            </p>\r\n          </div>\r\n        </Modal>\r\n        <Icon className={classes.iconHover} onClick={handleOpen}>\r\n          fiber_manual_record\r\n        </Icon>\r\n      </div>\r\n    );\r\n  }\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n    root: {\r\n      width: 28,\r\n      height: 16,\r\n      padding: 0,\r\n      display: 'flex',\r\n    },\r\n    switchBase: {\r\n      padding: 2,\r\n      color: theme.palette.grey[500],\r\n      '&$checked': {\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 12,\r\n      height: 12,\r\n      boxShadow: 'none',\r\n    },\r\n    track: {\r\n      border: `1px solid ${theme.palette.grey[500]}`,\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n  }))(Switch);\r\n\r\n  export default AntSwitch;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popup from 'react-popup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//components\r\nimport Prompt from './component/Prompt';\r\nimport Icons from './component/Icons';\r\nimport AntSwitch from './component/AntSwitch';\r\n//css\r\nimport './App.css';\r\nimport './css/popup.css'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setPosition = this.setPosition.bind(this);\r\n    this.insertMarker = this.insertMarker.bind(this);\r\n    this.addNewPoint = this.addNewPoint.bind(this);\r\n    this.handleModeChange = this.handleModeChange.bind(this);\r\n    this.state = {\r\n      x: \"\",\r\n      y: \"\",\r\n      isEditMode: false,\r\n      points: [],\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    fetch('http://localhost/api/client/2')\r\n      .then((r) => r.json()\r\n        .then((data) => {\r\n          this.setState({ points: data });\r\n        }));\r\n  }\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  displayPoints = () => {\r\n    return this.state.points.map((point) => {\r\n      return this.showOnePoint(point.ID, point.Lat, point.Lon, point.Img);\r\n    }\r\n    )\r\n  }\r\n\r\n  showOnePoint(key, x, y, img) {\r\n    let pointStyle = {\r\n      color: 'green',\r\n      // set center of the point to the coordinates\r\n      left: x - 12 + 'px',\r\n      top: y - 12 + 'px',\r\n    }\r\n    return (\r\n      <div className='currentPoints' style={pointStyle} key={key}>\r\n        <Icons \r\n          value={{\r\n            x: x,\r\n            y: y,\r\n            img: img,\r\n          }} \r\n          parent={this} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  setPosition(e) {\r\n    if (this.state.isEditMode)\r\n      this.setState({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\r\n  }\r\n\r\n  insertMarker() {\r\n    if (this.state.isEditMode && this.state.x !== \"\") {\r\n      const markerStyle = {\r\n        color: 'goldenrod',\r\n        // set center of the point to the coordinates\r\n        left: this.state.x - 12 + 'px',\r\n        top: this.state.y - 12 + 'px',\r\n      }\r\n      return <div className='marker' style={markerStyle}>\r\n        <Icons value={{\r\n          x: this.state.x,\r\n          y: this.state.y,\r\n          img: '',\r\n        }} />\r\n      </div>\r\n    }\r\n  }\r\n\r\n  handleModeChange() {\r\n    if (this.state.isEditMode === false) {\r\n      this.setState({ isEditMode: true })\r\n    }\r\n    else {\r\n      this.setState({ isEditMode: false, x: '', y: ''})\r\n    }\r\n  }\r\n  addNewPoint() {\r\n    let x = this.state.x;\r\n    let y = this.state.y;\r\n    let feedback = \"\";\r\n    /** Prompt plugin */\r\n    Popup.registerPlugin('prompt', function (defaultValue, placeholder, callback) {\r\n      let promptValue = null;\r\n      let promptChange = function (value) {\r\n        promptValue = value;\r\n      };\r\n      this.create({\r\n        title: 'Confirmation window',\r\n        content: <Prompt onChange={promptChange} placeholder={placeholder} value={defaultValue} />,\r\n        buttons: {\r\n          left: ['cancel'],\r\n          right: [{\r\n            text: 'Submit',\r\n            key: '⌘+s',\r\n            className: 'success',\r\n            action: function () {\r\n              let formData = new FormData();\r\n              formData.append('latitude', x)\r\n              formData.append('longitude', y)\r\n              formData.append('info', promptValue)\r\n              formData.append('user_id', '2')\r\n              fetch('http://localhost/api/client',\r\n                { method: 'POST', body: formData }\r\n              )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  feedback = data.Message;\r\n                  callback(feedback);\r\n                  Popup.close();\r\n                  this.props.parent.getData();\r\n                  this.props.parent.displayPoints();\r\n                  this.props.parent.setState({ x: '', y: '' });\r\n                })\r\n                .catch(e => console.log('error:', e))\r\n            }\r\n          }]\r\n        }\r\n      });\r\n    });\r\n    /** Call the plugin */\r\n    Popup.plugins().prompt('', 'extra information', function (value) {\r\n      Popup.alert('feedback: ' + value);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"container\" >\r\n      <div className='main_div'>\r\n        <div className='map'>\r\n          <img\r\n            alt='map'\r\n            src=\"https://www.livebakerblock.com/wp-content/uploads/2017/07/baker-plan-c1-1600px.png\"\r\n            onClick={this.setPosition}\r\n          />\r\n        </div>\r\n        {this.displayPoints()}\r\n        {this.insertMarker()}\r\n      </div>\r\n      <div className='panel'>\r\n        <Typography component=\"div\">\r\n          <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n            <Grid item>Review</Grid>\r\n            <Grid item>\r\n              <AntSwitch\r\n                onChange={this.handleModeChange}\r\n                value={this.state.isEditMode}\r\n              />\r\n            </Grid>\r\n            <Grid item>Edit</Grid>\r\n          </Grid>\r\n        </Typography>\r\n        {this.state.isEditMode && this.state.x !== \"\" && <div>\r\n        <Fab color=\"primary\" aria-label=\"add\" className={useStyles.fab} onClick={this.addNewPoint}><AddIcon /></Fab>\r\n        <h1>{this.state.x} {this.state.y}</h1></div>}\r\n      </div>\r\n      <Popup parent={this} />\r\n    </div>\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/test2.2e46337c.png\";"],"sourceRoot":""}